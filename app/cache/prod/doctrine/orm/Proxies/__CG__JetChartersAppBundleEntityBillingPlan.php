<?php

namespace Proxies\__CG__\JetCharters\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class BillingPlan extends \JetCharters\AppBundle\Entity\BillingPlan implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'id', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'operators', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'name', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'price', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'description', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'autorenew', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'activeFrom', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'activeTo', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'sortOrder', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'lengthInDays', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'enabled', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'numberOfAircraft');
        }

        return array('__isInitialized__', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'id', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'operators', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'name', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'price', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'description', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'autorenew', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'activeFrom', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'activeTo', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'sortOrder', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'lengthInDays', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'enabled', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BillingPlan' . "\0" . 'numberOfAircraft');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (BillingPlan $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setAutorenew($autorenew)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAutorenew', array($autorenew));

        return parent::setAutorenew($autorenew);
    }

    /**
     * {@inheritDoc}
     */
    public function getAutorenew()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAutorenew', array());

        return parent::getAutorenew();
    }

    /**
     * {@inheritDoc}
     */
    public function setActiveFrom($activeFrom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActiveFrom', array($activeFrom));

        return parent::setActiveFrom($activeFrom);
    }

    /**
     * {@inheritDoc}
     */
    public function getActiveFrom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActiveFrom', array());

        return parent::getActiveFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setActiveTo($activeTo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActiveTo', array($activeTo));

        return parent::setActiveTo($activeTo);
    }

    /**
     * {@inheritDoc}
     */
    public function getActiveTo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActiveTo', array());

        return parent::getActiveTo();
    }

    /**
     * {@inheritDoc}
     */
    public function setSortOrder($sortOrder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSortOrder', array($sortOrder));

        return parent::setSortOrder($sortOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function getSortOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSortOrder', array());

        return parent::getSortOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setLengthInDays($lengthInDays)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLengthInDays', array($lengthInDays));

        return parent::setLengthInDays($lengthInDays);
    }

    /**
     * {@inheritDoc}
     */
    public function getLengthInDays()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLengthInDays', array());

        return parent::getLengthInDays();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', array($enabled));

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', array());

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumberOfAircraft($numberAircraft)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumberOfAircraft', array($numberAircraft));

        return parent::setNumberOfAircraft($numberAircraft);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumberOfAircraft()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumberOfAircraft', array());

        return parent::getNumberOfAircraft();
    }

    /**
     * {@inheritDoc}
     */
    public function addOperator(\JetCharters\AppBundle\Entity\OperatorUser $operators)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOperator', array($operators));

        return parent::addOperator($operators);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOperator(\JetCharters\AppBundle\Entity\OperatorUser $operators)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOperator', array($operators));

        return parent::removeOperator($operators);
    }

    /**
     * {@inheritDoc}
     */
    public function getOperators()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOperators', array());

        return parent::getOperators();
    }

}
