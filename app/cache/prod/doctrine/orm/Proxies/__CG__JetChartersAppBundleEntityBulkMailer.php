<?php

namespace Proxies\__CG__\JetCharters\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class BulkMailer extends \JetCharters\AppBundle\Entity\BulkMailer implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BulkMailer' . "\0" . 'id', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BulkMailer' . "\0" . 'list', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BulkMailer' . "\0" . 'sendTime', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BulkMailer' . "\0" . 'subject', 'headerImage', 'headerImageName', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BulkMailer' . "\0" . 'topLink', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BulkMailer' . "\0" . 'bottomLink', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BulkMailer' . "\0" . 'mailerBody');
        }

        return array('__isInitialized__', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BulkMailer' . "\0" . 'id', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BulkMailer' . "\0" . 'list', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BulkMailer' . "\0" . 'sendTime', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BulkMailer' . "\0" . 'subject', 'headerImage', 'headerImageName', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BulkMailer' . "\0" . 'topLink', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BulkMailer' . "\0" . 'bottomLink', '' . "\0" . 'JetCharters\\AppBundle\\Entity\\BulkMailer' . "\0" . 'mailerBody');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (BulkMailer $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setList($list)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setList', array($list));

        return parent::setList($list);
    }

    /**
     * {@inheritDoc}
     */
    public function getList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getList', array());

        return parent::getList();
    }

    /**
     * {@inheritDoc}
     */
    public function setSendTime($sendTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSendTime', array($sendTime));

        return parent::setSendTime($sendTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getSendTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSendTime', array());

        return parent::getSendTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubject($subject)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubject', array($subject));

        return parent::setSubject($subject);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubject', array());

        return parent::getSubject();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeaderImage($headerImage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeaderImage', array($headerImage));

        return parent::setHeaderImage($headerImage);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeaderImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeaderImage', array());

        return parent::getHeaderImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setTopLink($topLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTopLink', array($topLink));

        return parent::setTopLink($topLink);
    }

    /**
     * {@inheritDoc}
     */
    public function getTopLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTopLink', array());

        return parent::getTopLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setBottomLink($bottomLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBottomLink', array($bottomLink));

        return parent::setBottomLink($bottomLink);
    }

    /**
     * {@inheritDoc}
     */
    public function getBottomLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBottomLink', array());

        return parent::getBottomLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setMailerBody($mailerBody)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMailerBody', array($mailerBody));

        return parent::setMailerBody($mailerBody);
    }

    /**
     * {@inheritDoc}
     */
    public function getMailerBody()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMailerBody', array());

        return parent::getMailerBody();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeaderImageName($headerImageName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeaderImageName', array($headerImageName));

        return parent::setHeaderImageName($headerImageName);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeaderImageName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeaderImageName', array());

        return parent::getHeaderImageName();
    }

}
